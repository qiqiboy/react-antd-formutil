{"version":3,"file":"react-antd-formutil.cjs.development.js","sources":["../src/FormItem.js"],"sourcesContent":["import React, { Component, cloneElement, Children } from 'react';\nimport { isValidElementType } from 'react-is';\nimport PropTypes from 'prop-types';\n// remember to add reserve array words in roollup.config.js\nimport { Form, Switch, Checkbox, Radio, Mention, Transfer, Pagination } from 'antd';\nimport { EasyField } from 'react-formutil';\n\nlet errorLevelGlobal = 1;\n\n/**\n * 0 dirty & invalid & touched\n * 1 dirty & invalid\n * 2 invalid\n */\nexport const setErrorLevel = function(level) {\n    errorLevelGlobal = level;\n};\n\nconst isUglify = Switch.name !== 'Switch';\n\nconst _Switch = isUglify ? Switch : 'Switch';\nconst _Checkbox = isUglify ? Checkbox : 'Checkbox';\nconst _Radio = isUglify ? Radio : 'Radio';\nconst _Mention = isUglify ? Mention : 'Mention';\nconst _Transfer = isUglify ? Transfer : 'Transfer';\nconst _Pagination = isUglify ? Pagination : 'Pagination';\n\nfunction getChildComponent(children) {\n    if (children) {\n        const childrenType = children.type;\n\n        if (typeof childrenType !== 'string' && isValidElementType(childrenType)) {\n            if (childrenType.formutilType) {\n                return childrenType.formutilType;\n            }\n\n            if (isUglify) {\n                return childrenType;\n            }\n\n            return childrenType.displayName || childrenType.name;\n        }\n\n        return children.props.type || children.type;\n    }\n}\n\nclass FormItem extends Component {\n    static propTypes = {\n        children: PropTypes.element.isRequired,\n        itemProps: PropTypes.object, //传递给antd的Form.Item的属性\n        errorLevel: PropTypes.oneOf([0, 1, 2, 'off'])\n        //$parser $formatter checked unchecked $validators validMessage等传递给 EasyField 组件的额外参数\n    };\n\n    render() {\n        const props = this.props;\n        const { children: childList, itemProps, errorLevel = errorLevelGlobal, ...fieldProps } = props;\n        const children = Children.only(childList);\n\n        let component = getChildComponent(children);\n\n        switch (component) {\n            case _Switch:\n            case _Checkbox:\n            case _Radio:\n                fieldProps.__TYPE__ = 'checked';\n                break;\n\n            case _Pagination:\n                if (!('$defaultValue' in fieldProps)) {\n                    fieldProps.$defaultValue = 1;\n                }\n                break;\n\n            case 'checked':\n            case 'array':\n            case 'object':\n            case 'number':\n            case 'empty':\n                fieldProps.__TYPE__ = component;\n                break;\n\n            default:\n                fieldProps.__TYPE__ = 'empty';\n                break;\n        }\n\n        return (\n            <EasyField\n                {...fieldProps}\n                passUtil=\"$fieldutil\"\n                render={$handleProps => {\n                    const {\n                        valuePropName = 'value',\n                        changePropName = 'onChange',\n                        focusPropName = 'onFocus',\n                        blurPropName = 'onBlur'\n                    } = props;\n                    const {\n                        $fieldutil,\n\n                        [changePropName]: onChange,\n                        [focusPropName]: onFocus,\n                        [blurPropName]: onBlur,\n                        [valuePropName]: value,\n\n                        ...restProps\n                    } = $handleProps;\n                    const { $invalid, $dirty, $touched, $focused, $getFirstError } = $fieldutil;\n\n                    let childProps;\n                    switch (component) {\n                        case _Switch:\n                        case _Checkbox:\n                        case _Radio:\n                        case 'checked':\n                            const { checked = true, unchecked = false } = props;\n                            childProps = {\n                                checked: value === checked,\n                                onChange: ev => {\n                                    const newValue = ev && ev.target ? ev.target.checked : ev;\n                                    onChange(newValue ? checked : unchecked, ev);\n                                }\n                            };\n                            break;\n\n                        case _Mention:\n                            childProps = {\n                                defaultValue: Mention.toContentState(value || ''),\n                                onChange: contentState => {\n                                    const newValue = Mention.toString(contentState);\n\n                                    if (newValue !== value) {\n                                        onChange(newValue);\n                                    }\n                                }\n                            };\n                            break;\n\n                        case _Transfer:\n                            childProps = {\n                                targetKeys: value,\n                                onChange\n                            };\n                            break;\n\n                        case _Pagination:\n                            childProps = {\n                                current: value,\n                                onChange\n                            };\n                            break;\n\n                        default:\n                            childProps = {\n                                onCompositionEnd: ev => {\n                                    this.isComposition = false;\n                                    delete this.compositionValue;\n                                    onChange(ev);\n                                },\n                                onCompositionStart: () => (this.isComposition = true),\n                                [changePropName]: (ev, ...rest) => {\n                                    if (this.isComposition) {\n                                        this.compositionValue = ev.target[valuePropName];\n                                        this.forceUpdate();\n                                    } else {\n                                        onChange(ev, ...rest);\n                                    }\n                                },\n                                [valuePropName]: 'compositionValue' in this ? this.compositionValue : value\n                            };\n                            break;\n                    }\n\n                    Object.assign(childProps, {\n                        [focusPropName]: onFocus,\n                        [blurPropName]: onBlur\n                    });\n\n                    let hasError;\n\n                    switch (errorLevel) {\n                        case 0:\n                            hasError = $invalid && $dirty && $touched;\n                            break;\n                        case 1:\n                            hasError = $invalid && $dirty;\n                            break;\n                        case 2:\n                            hasError = $invalid;\n                            break;\n                        default:\n                            hasError = false;\n                            break;\n                    }\n\n                    restProps.className = [\n                        restProps.className,\n                        hasError && 'has-error',\n                        $invalid ? 'is-invalid' : 'is-valid',\n                        $dirty ? 'is-dirty' : 'is-pristine',\n                        $touched ? 'is-touched' : 'is-untouched',\n                        $focused ? 'is-focused' : 'is-unfocused'\n                    ]\n                        .filter(Boolean)\n                        .join(' ');\n\n                    const validateResult = hasError\n                        ? {\n                              validateStatus: 'error',\n                              help: $getFirstError()\n                          }\n                        : {};\n\n                    return (\n                        <Form.Item {...restProps} {...itemProps} {...validateResult}>\n                            {cloneElement(children, childProps)}\n                        </Form.Item>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default FormItem;\n"],"names":["errorLevelGlobal","setErrorLevel","level","isUglify","Switch","name","_Switch","_Checkbox","Checkbox","_Radio","Radio","_Mention","Mention","_Transfer","Transfer","_Pagination","Pagination","getChildComponent","children","childrenType","type","isValidElementType","formutilType","displayName","props","FormItem","childList","itemProps","errorLevel","fieldProps","Children","only","component","__TYPE__","$defaultValue","React","EasyField","$handleProps","valuePropName","changePropName","focusPropName","blurPropName","$fieldutil","onChange","onFocus","onBlur","value","restProps","$invalid","$dirty","$touched","$focused","$getFirstError","childProps","checked","unchecked","ev","newValue","target","defaultValue","toContentState","contentState","toString","targetKeys","current","onCompositionEnd","isComposition","compositionValue","onCompositionStart","forceUpdate","rest","Object","assign","hasError","className","filter","Boolean","join","validateResult","validateStatus","help","Form","cloneElement","Component","propTypes","PropTypes","element","isRequired","object","oneOf"],"mappings":"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"}